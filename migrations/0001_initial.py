# Generated by Django 4.0.5 on 2022-08-07 16:18

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Famille',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='FamilleTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Forme',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
                ('famille', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='forme_famille', to='recipe.famille')),
            ],
        ),
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500, verbose_name='forme')),
                ('energie_kJ', models.FloatField(null=True)),
                ('energie_kcal', models.FloatField(null=True)),
                ('sodium', models.FloatField(null=True)),
                ('glucide', models.FloatField(null=True)),
                ('proteins', models.FloatField(null=True)),
                ('fibres', models.FloatField(null=True)),
                ('eau', models.FloatField(null=True)),
                ('lipide', models.FloatField(null=True)),
                ('sucres', models.FloatField(null=True)),
                ('fructose', models.FloatField(null=True)),
                ('galactose', models.FloatField(null=True)),
                ('glucose', models.FloatField(null=True)),
                ('lactose', models.FloatField(null=True)),
                ('maltose', models.FloatField(null=True)),
                ('saccharose', models.FloatField(null=True)),
                ('amidon', models.FloatField(null=True)),
                ('fibresALimentraires', models.FloatField(null=True)),
                ('polyols', models.FloatField(null=True)),
                ('cendres', models.FloatField(null=True)),
                ('alcool', models.FloatField(null=True)),
                ('acidesOrganiques', models.FloatField(null=True)),
                ('AGsatures', models.FloatField(null=True)),
                ('AGmonoinsature', models.FloatField(null=True)),
                ('AGpolyinsature', models.FloatField(null=True)),
                ('AGbutyrique', models.FloatField(null=True)),
                ('AGcaproique', models.FloatField(null=True)),
                ('AGcaprylique', models.FloatField(null=True)),
                ('AGcaprique', models.FloatField(null=True)),
                ('AGlaurique', models.FloatField(null=True)),
                ('AGmyristique', models.FloatField(null=True)),
                ('AGpalmitique', models.FloatField(null=True)),
                ('AGbstearique', models.FloatField(null=True)),
                ('AGoleique', models.FloatField(null=True)),
                ('AGlinoleique', models.FloatField(null=True)),
                ('AGalphalinolenique', models.FloatField(null=True)),
                ('AGarachidonique', models.FloatField(null=True)),
                ('AGepa', models.FloatField(null=True)),
                ('AGdha', models.FloatField(null=True)),
                ('cholesterol', models.FloatField(null=True)),
                ('selchlorure', models.FloatField(null=True)),
                ('calcium', models.FloatField(null=True)),
                ('chlorure', models.FloatField(null=True)),
                ('cuivre', models.FloatField(null=True)),
                ('fer', models.FloatField(null=True)),
                ('iode', models.FloatField(null=True)),
                ('magnesium', models.FloatField(null=True)),
                ('manganese', models.FloatField(null=True)),
                ('phosphore', models.FloatField(null=True)),
                ('potassium', models.FloatField(null=True)),
                ('selenium', models.FloatField(null=True)),
                ('zinc', models.FloatField(null=True)),
                ('retinol', models.FloatField(null=True)),
                ('betaCarotene', models.FloatField(null=True)),
                ('vitamineD', models.FloatField(null=True)),
                ('vitamineE', models.FloatField(null=True)),
                ('VitamineK1', models.FloatField(null=True)),
                ('vitamineK2', models.FloatField(null=True)),
                ('vitamineB1', models.FloatField(null=True)),
                ('vitamineB2', models.FloatField(null=True)),
                ('VitamineB3', models.FloatField(null=True)),
                ('vitamineB5', models.FloatField(null=True)),
                ('vitamineB6', models.FloatField(null=True)),
                ('vitamineB9', models.FloatField(null=True)),
                ('VitamineB12', models.FloatField(null=True)),
                ('famille', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='famille_ingredient', to='recipe.famille')),
                ('forme', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='forme_ingredient', to='recipe.forme', verbose_name='ingr√©dient')),
            ],
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500, unique=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProcessRecipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('step', models.CharField(max_length=100)),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='process_recipe', to='recipe.recipe')),
            ],
        ),
        migrations.CreateModel(
            name='IngredientTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('energie_kJ', models.FloatField(null=True)),
                ('famille', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='famille_ingredient', to='recipe.familletest')),
            ],
        ),
        migrations.CreateModel(
            name='IngredientRecipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.FloatField()),
                ('famille', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ingredients_recipe_famille', to='recipe.famille')),
                ('forme', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ingredients_recipe_forme', to='recipe.forme')),
                ('ingredient', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='xyz', to='recipe.ingredient')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ingredients_recipe', to='recipe.recipe')),
            ],
        ),
        migrations.CreateModel(
            name='Contraintes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seuil', models.FloatField()),
                ('famille_1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recipe.famille')),
            ],
        ),
    ]
